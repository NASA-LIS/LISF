#!/bin/sh
#
#------------------------------------------------------------------------------
# INPUT ARGUMENTS
#
SYR=${1}
EYR=${2}
FCST_INIT_MONTHDAY=${3}
SRCDIR=${4}
OUTDIR=${5}
FORCEDIR=${6}
GRID_DESCRIPTION=${7}
ic1="${8}"
ic2="${9}"
ic3="${10}"   
#
# Other Arguments 
#
all_ensmembers=("00" "06" "12" "18" "00" "06" "12" "18" "00" "06" "12" "18")
all_monthdays=($ic1 $ic1 $ic1 $ic1 $ic2 $ic2 $ic2 $ic2 $ic3 $ic3 $ic3 $ic3)

#
#------------------------------------------------------------------------------
# HELPER FUNCTIONS
#
function set_input_file_info() {
  input_fcst_year=$1
  input_fcst_month=$2
  input_fcst_var=$3

  # Generate YYYYMM to locate the correct directories
  cutoff_refor_YYYYMM=201103 #cutoff is the last month of available data
  cutoff_oper_YYYYMM=202012  #cutoff is the last month of available data
  current_YYYYMM=$(( 100*$input_fcst_year + ${input_fcst_month#0} ))
    
  # Up to apr01 2011 - Refor_HPS (dlwsfc, dswsfc, q2m, wnd10m), Refor_FL (prate, pressfc, tmp2m)
  if (( ${current_YYYYMM} <= ${cutoff_refor_YYYYMM} )); then
    case $input_fcst_var in
      dlwsfc|dswsfc|q2m|wnd10m)
        SUBDIR="Refor_HPS"
        ;;
      prate|pressfc|tmp2m)
        SUBDIR="Refor_FL"
        ;;  
    esac
    file_pfx=${input_fcst_var}
    file_sfx="time.grb2"
  # From may01 2011 to jan01 2021 - Oper_TS (all fields)
  elif (( ($current_YYYYMM > $cutoff_refor_YYYYMM) && ($current_YYYYMM <= $cutoff_oper_YYYYMM) )); then
    SUBDIR="Oper_TS"
    file_pfx=${input_fcst_var}".01"
    file_sfx="daily.grb2"
  # From feb01 2021 - OperRT_TS (all fields)
  elif (( $current_YYYYMM > $cutoff_oper_YYYYMM )); then
    SUBDIR="OperRT_TS"
    file_pfx=${input_fcst_var}".01"
    file_sfx="daily.grb2"
  fi
}

#
#------------------------------------------------------------------------------
# MAIN FUNCTION
#

# Loop over each year:
for ((YEAR=$SYR; YEAR<=$EYR; YEAR++)); do
  echo "*** "$FCST_INIT_MONTHDAY" "$YEAR" Forecast ***"
  
  # Check for the correct year for the initialization month
  if [ $FCST_INIT_MONTHDAY == jan01 ]; then 
    FCST_INIT_YEAR="$(($YEAR-1))"       
  else
    FCST_INIT_YEAR=$YEAR
  fi
  
  final_name_pfx=$FCST_INIT_MONTHDAY".cfsv2." 
  temp_name="cfsv2."${FCST_INIT_YEAR}${monthday}".nc"
  
  # Loop over each forecast ensemble member:
  for ((ENS_NUM=1; ENS_NUM<=${#all_ensmembers[@]}; ENS_NUM++)); do
    monthday=${all_monthdays[$ENS_NUM-1]} 
    FCST_INIT_DATE=${FCST_INIT_YEAR}${monthday}
    FCST_INIT_MONTH=$(echo $monthday | cut -c 1-2)
    FCST_INIT_DAY=$(echo $monthday | cut -c 3-4)
    FCST_INIT_HOUR=${all_ensmembers[$ENS_NUM-1]}
    
    FCST_TIMESTRING=${FCST_INIT_DATE}${FCST_INIT_HOUR}

    wanted_months=( $(seq $FCST_INIT_MONTH 12) $(seq 1 $(expr $FCST_INIT_MONTH - 1)) )
    wanted_months=${wanted_months[@]:1:9}
    wanted_months=${wanted_months// /,}
    
    REFTIME=$FCST_INIT_YEAR"-"$FCST_INIT_MONTH"-"$FCST_INIT_DAY","$FCST_INIT_HOUR":00:00,1hour"
    echo "ENS"${ENS_NUM}": "${FCST_INIT_YEAR}"-"$monthday":"${FCST_INIT_HOUR}

    
    # Loop over each variable:  
    for varname in prate pressfc tmp2m dlwsfc dswsfc q2m wnd10m; do
      echo $varname
      # Sets up subdailyfile 
      set_input_file_info ${FCST_INIT_YEAR} ${FCST_INIT_MONTH} ${varname}

      INDIR=$FORCEDIR"/"$SUBDIR"/"$FCST_INIT_YEAR"/"${FCST_INIT_DATE}

      OUTDIR_6HOURLY=$OUTDIR"/6-Hourly/"$FCST_INIT_MONTHDAY"/"$YEAR"/ens"$ENS_NUM
      mkdir -p $OUTDIR_6HOURLY
      OUTDIR_MONTHLY=$OUTDIR"/Monthly/"$FCST_INIT_MONTHDAY"/"$YEAR"/ens"$ENS_NUM
      mkdir -p $OUTDIR_MONTHLY

      # Converts GRIB file to NetCDF and handles missing/corrupted data
      sh $SRCDIR/convert_forecast_data_to_netcdf.scr $INDIR $file_pfx $FCST_TIMESTRING $file_sfx $OUTDIR_6HOURLY $temp_name $varname 
    done;
    
     
    # Merge all variables into a single file
    cdo --no_history merge ${OUTDIR_6HOURLY}/junk1_*_${temp_name} ${OUTDIR_6HOURLY}/junk2_${temp_name}
      
    # Subset data to only include the 9 forecast months
    cdo --no_history selmon,${wanted_months} ${OUTDIR_6HOURLY}/junk2_${temp_name} ${OUTDIR_6HOURLY}/junk3_${temp_name}
    
    # Convert all variable names and set missing value to -9999.f
    cdo --no_history -setmissval,-9999. -chname,DSWRF_surface,SLRSF,DLWRF_surface,LWS,PRATE_surface,PRECTOT,PRES_surface,PS,SPFH_2maboveground,Q2M,TMP_2maboveground,T2M,UGRD_10maboveground,U10M,VGRD_10maboveground,V10M ${OUTDIR_6HOURLY}/junk3_${temp_name} ${OUTDIR_6HOURLY}/junk4_${temp_name} 
      
    # Add in windspeed variable
    cdo --no_history aexpr,'WIND10M=sqrt(U10M*U10M + V10M*V10M)' ${OUTDIR_6HOURLY}/junk4_${temp_name} ${OUTDIR_6HOURLY}/junk5_${temp_name}
    cdo --no_history setattribute,WIND10M@long_name='Wind Speed',WIND10M@units='m/s',WIND10M@short_name='wnd10m',WIND10M@level='10 m above ground' ${OUTDIR_6HOURLY}/junk5_${temp_name} ${OUTDIR_6HOURLY}/junk6_${temp_name}   
    
    # Remap to destination grid and set reference time
    cdo --no_history -remapbil,${GRID_DESCRIPTION} -setreftime,${REFTIME} ${OUTDIR_6HOURLY}/junk6_${temp_name} ${OUTDIR_6HOURLY}/junk7_${temp_name}
    
    #
    # OUTPUT
    #    
    # Output 6-hourly data into monthly files
    cdo --no_history -f nc4c -z zip_1 -splityearmon ${OUTDIR_6HOURLY}/junk7_${temp_name} ${OUTDIR_6HOURLY}/${final_name_pfx}  
    echo "Temporarily skipping 6-hourly output..."
    # Output monthly data into monthly files
    cdo --no_history -L -f nc4c -z zip_1 -splityearmon -monmean ${OUTDIR_6HOURLY}/junk7_${temp_name} ${OUTDIR_MONTHLY}/${final_name_pfx}  
      
    # Cleanup intermediate files
    rm -rf ${OUTDIR_6HOURLY}/junk*${final_name}  
  done; 
done;

echo " -- Done processing CFSv2 forecast files -- "


