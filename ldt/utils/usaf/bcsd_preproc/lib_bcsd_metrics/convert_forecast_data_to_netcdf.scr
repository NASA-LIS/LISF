#!/bin/sh
#
#------------------------------------------------------------------------------
# INPUT ARGUMENTS
#
INDIR=${1}
file_pfx=${2}
fcst_timestring=${3}
file_sfx=${4}
OUTDIR=${5}
temp_name=${6}
varname=${7}

#
# Other Arguments
#
PATCHDIR="/discover/nobackup/projects/usaf_lis/razamora/GHI_S2S/AFRICOM/data/CFSv2_25km/patch_files"
comparison_name=${file_pfx}"."${fcst_timestring}"."${file_sfx}
subdaily_file=${INDIR}"/"${comparison_name}

#
#------------------------------------------------------------------------------
# HELPER FUNCTIONS
#
function patch_corrupted_file() {
  patched_timestring=$1
  index_subdaily_start=$2
  index_subdaily_end=$3
  index_patch_start=$4
  index_patch_end=$5

  patch_file=${PATCHDIR}"/"${file_pfx}"."${patched_timestring}"."${file_sfx}

  echo "***** Patching corrupted data: ${subdaily_file} *****"
  echo "***** Using data from: ${patch_file} *****"

  # Subset corrupted file
  cdo -seltimestep,${index_subdaily_start}/${index_subdaily_end} $subdaily_file ${OUTDIR}"/junk1_"${file_pfx}"_patch_A.grb2"
  wgrib2 -v0 ${OUTDIR}"/junk1_"${file_pfx}"_patch_A.grb2" -netcdf ${OUTDIR}"/junk1_"${file_pfx}"_patch_A.nc" >/dev/null
  echo "Subset corrupted file"

  # Subset patch file
  cdo -seltimestep,${index_patch_start}/${index_patch_end} $patch_file ${OUTDIR}"/junk1_"${file_pfx}"_patch_B.grb2"
  wgrib2 -v0 ${OUTDIR}"/junk1_"${file_pfx}"_patch_B.grb2" -netcdf ${OUTDIR}"/junk1_"${file_pfx}"_patch_B.nc" >/dev/null
  echo "Subset patch file"

  # Merge files
  cdo mergetime ${OUTDIR}"/junk1_"${file_pfx}"_patch_A.nc" ${OUTDIR}"/junk1_"${file_pfx}"_patch_B.nc" ${OUTDIR}"/junk1_"${file_pfx}"_"${temp_name}
  echo "Merged times"
}

function replace_missing_file() {
   patched_timestring=$1
   patch_file=${PATCHDIR}"/"${file_pfx}"."${patched_timestring}"."${file_sfx}
   wgrib2 -v0 ${patch_file} -netcdf ${OUTDIR}"/junk1_"${file_pfx}"_"${temp_name} >/dev/null
   echo "***** File not available: ${subdaily_file} *****"
   echo "***** Using alternate data: ${patch_file}  *****"
}

function handle_cases_with_corrupted_wind_files() {
  patched_timestring=$1
  index_subdaily_start=$2
  index_subdaily_end=$3
  index_patch_start=$4
  index_patch_end=$5
  
  if [ $varname == "wnd10m" ]; then
    replace_missing_file ${patched_timestring}
  else
    patch_corrupted_file ${patched_timestring} ${index_subdaily_start} ${index_subdaily_end} ${index_patch_start} ${index_patch_end}
  fi
}

#
#------------------------------------------------------------------------------
# MAIN FUNCTION
#

# Check and patch files where only one file needs to be replaced
case $comparison_name in
  dlwsfc.01.2018122700.daily.grb2)
    patch_corrupted_file 2018122600 1 1015 1020 1116 # Previous day
    exit 1
    ;;
  q2m.2011022512.time.grb2)
    patch_corrupted_file 2011022506 1 403 408 1239 # Previous initialization
    exit 1
    ;;
  q2m.2011022518.time.grb2)
    patch_corrupted_file 2011022506 1 829 834 1239 # Two previous initialization
    exit 1
    ;;
  dlwsfc.2011032706.time.grb2)
    patch_corrupted_file 2011032700 1 121 126 1244 # Previous initialization
    exit 1
    ;;    
esac

# Check and patch files where all variables need to be replaced
case $fcst_timestring in
  2016032718) 
    handle_cases_with_corrupted_wind_files 2016032518 1 180 185 1125 # 2 days previous
    exit 1
    ;;
  2016042618)  
    handle_cases_with_corrupted_wind_files 2016042518 1 32 37 1125 # Previous day
    exit 1
    ;;
  2016063018)  
    handle_cases_with_corrupted_wind_files 2016070218 1 180 185 1209 # 2 days after
    exit 1
    ;;
  2016073018)  
    handle_cases_with_corrupted_wind_files 2016072918 1 180 185 1225 # Previous day
    exit 1
    ;;
  2016082918)  
    handle_cases_with_corrupted_wind_files 2016090318 1 180 185 1201 # 3 days after
    exit 1
    ;;
esac  

# Check and patch files that are completely missing
case $fcst_timestring in
  2011082406)  
    replace_missing_file 2011082306
    exit 1
    ;;
  2018062518)
    replace_missing_file 2018062418
    exit 1
    ;;
  2018063018)
    replace_missing_file 2018062818
    exit 1
    ;;
  2018073018)
    replace_missing_file 2018072618
    exit 1
    ;;
  2018082918)
    replace_missing_file 2018082818
    exit 1
    ;;
esac

# If none of these are the case, the file should be fine and we can treat it normally
echo "File is normal."
wgrib2 -v0 ${subdaily_file} -netcdf ${OUTDIR}"/junk1_"${file_pfx}"_"${temp_name} >/dev/null

