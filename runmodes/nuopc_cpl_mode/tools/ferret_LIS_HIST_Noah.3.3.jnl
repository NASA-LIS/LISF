 ! FERRET v6.96 Script
 ! >ferret -gif -script ferret_LIS_HIST_Noah.3.3_output.jnl [LIS_HIST input file] [Output prefix]
 ! Author: Daniel Rosen
 ! Organization: NESII/CIRES/NOAA
 ! Email: daniel.rosen@noaa.gov
 ! Date: 2017-01-27

CANCEL MODE LOGO

! Load dataset 1 and compute output file label
USE $1
SET VARIABLE/TITLE="Longitude" lon[d=1]
SET VARIABLE/TITLE="Latitude" lat[d=1]
DEFINE SYMBOL dname `"$1"`
DEFINE SYMBOL fnlen `STRLEN("($dname)")`
DEFINE SYMBOL ext `STRRINDEX("($dname)",".nc")`
DEFINE SYMBOL prefix `STRRINDEX("($dname)","LIS_HIST_")`
DEFINE SYMBOL fname `SUBSTRING("($dname)",10,($fnlen)-12)`
DEFINE SYMBOL flist "'($fname)'"

! Compute number of datasets
DEFINE SYMBOL argv "$*"
DEFINE SYMBOL argvlen `STRLEN("($ARGV)")`
DEFINE SYMBOL argc 1
REPEAT/RANGE=1:($argvlen)/NAME=cctr ( \
DEFINE SYMBOL cindex `cctr`; \
DEFINE SYMBOL char "`SUBSTRING("($argv)",($cindex)-1,1)`"; \
DEFINE SYMBOL space `STRCMP("($char)"," ")`; \
LET iter = IF ($space) EQ 0 THEN 1 ELSE 0; \
DEFINE SYMBOL argc `($argc) + iter`; \
)

! Load remaining datasets and compute output file labels
REPEAT/RANGE=2:($argc)/NAME=dctr ( \
DEFINE SYMBOL dindex `dctr`; \
DEFINE SYMBOL dname `"$($dindex)"`; \
USE ($dname); \
SET VARIABLE/TITLE="Longitude" lon[d=($dindex)]; \
SET VARIABLE/TITLE="Latitude" lat[d=($dindex)]; \
DEFINE SYMBOL fnlen `STRLEN("($dname)")`; \
DEFINE SYMBOL ext `STRRINDEX("($dname)",".nc")`; \
DEFINE SYMBOL prefix `STRRINDEX("($dname)","LIS_HIST_")`; \
DEFINE SYMBOL fname `SUBSTRING("($dname)",10,($fnlen)-12)`; \
DEFINE SYMBOL flist ($flist), '($fname)'; \ 
)
LET flabels = { ($flist) }

! Print datasets
SHOW DATA/BRIEF

! Define single level forcing variables
LET fnames = {   \
"Psurf_f_inst",  \
"Tair_f_inst",   \
"EWind_f_inst",  \
"LWdown_f_inst", \
"NWind_f_inst",  \
"Rainf_f_tavg",  \
"SWdown_f_inst", \
"Qair_f_inst"    \
}

! Define single level forcing variable titles
LET ftitles = {       \
"Air Pressure",       \
"Air Temperature",    \
"Eastward Wind",      \
"Longwave Flux",      \
"Northward Wind",     \
"Precipitation Flux", \
"Shortwave Flux",     \
"Specific Humidity"   \
}

! Define single level forcing variable scales
LET fminvals  = {  65000, 250,-30, 100,-30, 0.0000,   0, 0.000 }
LET fmaxvals  = { 105000, 310, 30, 450, 30, 0.0100, 500, 0.025 }
LET fstepvals = {   1000,   2,  2,  10,  2, 0.0002,  10, 0.001 }
LET fminoutlr = {  10000, 200,-60,  50,-60, 0.0000,   0, 0.000 }
LET fmaxoutlr = { 200000, 350, 60, 600, 60, 0.1000, 999, 0.025 }

! Create SHADE plots for single level forcing variables
SAY
SAY *** Plotting single level forcing variables ***
REPEAT/RANGE=1:($argc)/NAME=dctr ( \
REPEAT/RANGE=1:`fnames,return=isize`/NAME=vctr ( \
DEFINE SYMBOL vindex `vctr`; \
DEFINE SYMBOL dindex `dctr`; \
DEFINE SYMBOL vtitle `ftitles[i=($vindex)]`  ; \
DEFINE SYMBOL vname  `fnames[i=($vindex)]`   ; \
DEFINE SYMBOL vmin   `fminvals[i=($vindex)]` ; \
DEFINE SYMBOL vmax   `fmaxvals[i=($vindex)]` ; \
DEFINE SYMBOL vstep  `fstepvals[i=($vindex)]`; \
DEFINE SYMBOL vmnol  `fminoutlr[i=($vindex)]`; \
DEFINE SYMBOL vmxol  `fmaxoutlr[i=($vindex)]`; \
DEFINE SYMBOL label  `flabels[x=($dindex)]`; \
SET VARIABLE/BAD=-9999/TITLE="($vtitle)" ($vname)[d=($dindex)]; \
SAY ($vtitle) (outliers,min,max,outliers)=\
(($vmnol),($vmin),($vmax),($vmxol)); \
SHADE/LEVELS="(($vmnol))(($vmin),($vmax),($vstep))(($vmxol))"/\
KEY=CONTINUOUS/TITLE="LIS Forcing ($vtitle)" \
($vname)[d=($dindex)], lon[d=($dindex)], lat[d=($dindex)]; \
FRAME/FILE=plot_($label)_forcing_($vname).gif \
))

! Define single level output variables
LET onames = {    \
"Albedo_inst",    \
"Qg_tavg",        \
"SnowCover_inst", \
"SnowDepth_inst", \
"AvgSurfT_tavg",  \
"Qle_tavg",       \
"Qh_tavg"         \
} ! To be added "effective_mixing_ratio"

! Define single level output variable titles
LET otitles = {               \
"Albedo",                     \
"Downward Heat Flux in Soil", \
"Snow Area Fraction",         \
"Snow Depth",                 \
"Surface Temperature",        \
"Upward Latent Heat Flux",    \
"Upward Sensible Heat Flux"   \
} ! To be added "Effective Mixing Ratio

! Define single level output variable scales
LET ominvals  = { 0.00,-250, 0.00,  0.00, 250,-100,-200 }
LET omaxvals  = { 0.60, 100, 1.00,  1.00, 310, 200, 200 }
LET ostepvals = { 0.01,   5, 0.02,  0.02,   2,   5,   5 }
LET ominoutlr = { 0.00,-999, 0.00,  0.00, 200,-500,-500 }
LET omaxoutlr = { 0.99, 999, 1.00,999.00, 350, 500, 500 }

! Create SHADE plots for single level output variables
SAY
SAY *** Plotting single level output variables ***
REPEAT/RANGE=1:($argc)/NAME=dctr ( \
REPEAT/RANGE=1:`onames,return=isize`/NAME=vctr ( \
DEFINE SYMBOL vindex `vctr`; \
DEFINE SYMBOL dindex `dctr`; \
DEFINE SYMBOL vtitle `otitles[i=($vindex)]`  ; \
DEFINE SYMBOL vname  `onames[i=($vindex)]`   ; \
DEFINE SYMBOL vmin   `ominvals[i=($vindex)]` ; \
DEFINE SYMBOL vmax   `omaxvals[i=($vindex)]` ; \
DEFINE SYMBOL vstep  `ostepvals[i=($vindex)]`; \
DEFINE SYMBOL vmnol  `ominoutlr[i=($vindex)]`; \
DEFINE SYMBOL vmxol  `omaxoutlr[i=($vindex)]`; \ 
DEFINE SYMBOL label  `flabels[x=($dindex)]`;   \
SET VARIABLE/BAD=-9999/TITLE="($vtitle)" ($vname)[d=($dindex)]; \
SAY ($vtitle) (outliers,min,max,outliers)=\
(($vmnol),($vmin),($vmax),($vmxol)); \
SHADE/LEVELS="(($vmnol))(($vmin),($vmax),($vstep))(($vmxol))"/\
KEY=CONTINUOUS/TITLE="LIS ($vtitle)" \
($vname)[d=($dindex)], lon[d=($dindex)], lat[d=($dindex)]; \
FRAME/FILE=plot_($label)_output_($vname).gif \
))

! Define multi level output variables
LET onamesml = {  \
"SmLiqFrac_inst", \
"SoilMoist_inst", \
"SoilTemp_inst"   \
}

! Define multi level output variable titles
LET otitlesml = {                   \
"Liquid Fraction of Soil Moisture", \
"Soil Moisture",                    \
"Soil Temperature"                  \
}

! Define multi level output variable scales
LET ominvalsml  = { 0.400, 0.00, 250 }
LET omaxvalsml  = { 0.500, 0.50, 310 }
LET ostepvalsml = { 0.002, 0.01,   2 }
LET ominoutlrml = { 0.000, 0.00, 200 }
LET omaxoutlrml = { 1.000, 1.00, 350 }

! Create SHADE plots for multi-level output variables
SAY
SAY *** Plotting multi level output variables ***
REPEAT/RANGE=1:($argc)/NAME=dctr ( \
REPEAT/RANGE=1:`onamesml,return=isize`/NAME=vctr ( \
DEFINE SYMBOL vindex `vctr`; \
DEFINE SYMBOL vtitle `otitlesml[i=($vindex)]`; \
DEFINE SYMBOL vname  `onamesml[i=($vindex)]`; \
SET VARIABLE/BAD=-9999/TITLE="($vtitle)" ($vname)[d=($dindex)]; \
REPEAT/K=1:`($vname)[d=($dindex)],return=ksize` ( \
DEFINE SYMBOL lname `k`; \
DEFINE SYMBOL vindex `vctr`; \
DEFINE SYMBOL dindex `dctr`; \
DEFINE SYMBOL vtitle `otitlesml[i=($vindex)]`  ; \
DEFINE SYMBOL vname  `onamesml[i=($vindex)]`   ; \
DEFINE SYMBOL vmin   `ominvalsml[i=($vindex)]` ; \
DEFINE SYMBOL vmax   `omaxvalsml[i=($vindex)]` ; \
DEFINE SYMBOL vstep  `ostepvalsml[i=($vindex)]`; \
DEFINE SYMBOL vmnol  `ominoutlrml[i=($vindex)]`; \
DEFINE SYMBOL vmxol  `omaxoutlrml[i=($vindex)]`; \
DEFINE SYMBOL label  `flabels[x=($dindex)]`;     \
SAY ($vtitle) K=($lname) (outliers,min,max,outliers)=\
(($vmnol),($vmin),($vmax),($vmxol)); \
SHADE/K=`k`/LEVELS="(($vmnol))(($vmin),($vmax),($vstep))(($vmxol))"/\
KEY=CONTINUOUS/TITLE="LIS ($vtitle) Level ($lname)" \
($vname)[d=($dindex)], lon[d=($dindex)], lat[d=($dindex)]; \
FRAME/FILE=plot_($label)_output_($vname)_Lv($lname).gif \
)))

! Create compressed tar archive of all .gif files
SAY
SAY *** Creating plots.tar.gz archive ***
SPAWN tar -czf plots.tar.gz *.gif

exit
