#
# README for Noah-MP-4.0.1 + HyMAP2 S2S-AFRICOM ~ LIS DA Scripts 
#
# Kristi Arsenault, SAIC and NASA GSFC
# Last modified 3 Nov 2021
#
----------------------------------------------------------------------------

The scripts found here for running Noah-MP-4.0.1 LSM and the HYMAP2 routing 
model in LIS provide a more automated way of setting and running a continuous
or month-to-month LIS data assimilation (DA) type runs. The current configuration
is for the LIS-Hydro S2S-AFRICOM domain and daily output, but updates can
be made to any of the scripts and inputs files for other models and setup.

This directory contains:

 * This README file

 * The following scripts:
 
  run_lis_darun_nrt_slurm.sh : Batch shell script
   | 
    --> (calls) generate_lisda_config_nrt.py : Generates lis.config file 

 * Script description:

   1.  run_lis_darun_nrt_slurm.sh:
   
    This is a shell-based batch script that helps to generate a LIS config
    file, to be used in a LIS data assimilation run, and then submits that
    config file with the local LIS executable to generate a LIS DA run, 
    based on input and output dates provided.

    How to run the script, as an example using SLURM queueing system:

     sbatch run_lis_darun_nrt_slurm.sh START_YYYYMMDD END_YYYYMMDD

    where "START_YYYYMMDD" and "END_YYYYMMDD" are user inputs specified 
     for the start and ending dates of an intended LIS DA run.

    Example command run:
     sbatch run_lis_darun_nrt_slurm.sh 20210901 20211001

   2.  generate_lisda_config_nrt.py:

    This Python script generates the LIS config file used to initiate
     an ongoing DA run for the S2S-AFRICOM domain. It is currently setup
     to ingest the start and ending dates specified by the user from
     the shell script (#1 description above), input and output directories, 
     along with whether the data assimilation perturbation ("DAPERT") 
     initiation should be from "coldstart" or "restart" perturbation
     conditions. If for "restart", a "DAPERT" restart file is expected,
     as written out by LIS, and read in for the next LIS DA run to be
     initialized from.

 * Other input files required:

   1.  template_files/lis.config_template:

    This "template_files" directory and template-based LIS config file,
     "lis.config_template", contains the config entries and placeholders
     that are filled within the above python script, generate_lisda_config_nrt.py.

   2.  lis_darun.cfg:

    This Python text-based config file offers user-input entries that 
     the above python script, generate_lisda_config_nrt.py, reads in
     and use to help further populate and fill-in placeholder entries in
     the above "lis.config_template" file.

 * When the above scripts are run, the following LIS config outputs are also
   generated:

   A new directory created named:  "lis.config_files", which contains any
    newly generated LIS config files for a given LIS DA run. 

   For example,
   lis.config_files/lis.config_darun_20210901 

   The above example LIS config file will contain the required inputs 
    for a LIS DA run, based on the S2S-AFRICOM domain and settings.
    The shell script will also copy that file to a local:  lis.config 
    file and then kick off a LIS run with that file and settings.

 ** NOTE: If you need to change any paths or input files, you can adjust them 
   mainly in:

   1.  template_files/lis.config_template
   2.  lis_darun.cfg


