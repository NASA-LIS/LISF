Installation and Compilation of LIS 5.0 on a Linux Machine with the Lahey 95 Compiler. 

Kristi Arsenault (12/3/07)

A. Install ESMF

Install version 2_2_2r (preferably non-beta) of the Earth System Modeling Framework (ESMF) software and build the libraries to be linked with LIS 5.0.

1)  Go to the ESMF website and download version, e.g., esmf_2_2_2r:
http://www.esmf.ucar.edu/download/index.shtml

2) To install the latest ESMF version, change directory to the ESMF directory (where you have installed the software)

3)  From the working directory, set the following environmental variables to build and compile the libraries:

    a)  export ESMF_DIR=/home/username/esmf_2_2_2r

        *( Or any other directory path where the ESMF code is located)

    b)  export ESMF_COMPILER=lahey

** ( To set the compiler setting for this environmental variable, look at the README file for your specific machine architecture and compiler in the ESMF directory: build_config.  For a Lahey compiler (as an example), you will find the README file in the Linux.lahey.default directory which is in the build_config directory.)

    c) export LD_LIBRARY_PATH= 
/home/[username]/esmf_[version]/lib/libO/Linux.lahey.32.mpiuni.default:$LD_LIBRARY_PATH

*** (Place the above export command (c) in your .bashrc or .bash_profile (or in .cshrc if working in C-shell or Bourne shell) file which typically resides in your home directory.  This will permanently set this external ESMF shared library path as an environmental variable for the Lahey compiler to be able to recognize it always). 

4)  Next, make sure you are in the parent ESMF directory, and then type:  gmake.  If a machine is low on stack-size memory, then type: ulimit -s unlimited, before you type, gmake.

5)  Once build and compilation are complete (you will receive a confirmation from the software that it was built correctly), you can double check the build by typing:  gmake check.  At the end of the check, you should receive a confirmation statement, like:

"Found 18 system tests, 18 passed and 0 failed"

B. Configure LIS 5.0 for Compilation

At this stage, you want to return to your working LIS 5.0 directory and cd into the make directory.  Once in there, you want to first complete the following steps before the main compilation and build is initiated. 

1)  Using a text editor, open the misc.h file and "undef" or undefine any variables that you will not be compiling with (e.g., NetCDF libraries).

2)  Next, cd back one to the directory, arch, (which is short-hand for "architecture") and look for the LIS configuration text file that matches the Lahey compiler ("lf95").  You want to select and modify this file:  configure.lis.linux_lf95.In this file, you want to make sure you modify any information for the following flags that match the directories on your local machine, especially for the ESMF libraries and modules (LIB_ESMF and MOD_ESMF, respectively):
	FC              = lf95
	LD              = lf95
	CC              = gcc
	INC_NETCDF      =
	LIB_NETCDF      =
	LIB_MPI         =
	INC_MPI         =
	LIB_ESMF        =  /S1B2/[username]/esmf_2_2_2r/lib/libO/Linux.lahey.32.mpiuni.default
	MOD_ESMF        =  /S1B2/[username]/esmf_2_2_2r/mod/modO/Linux.lahey.32.mpiuni.default
	CFLAGS          = -c -O -DUSE_GCC -DLAHEY -DLITTLE_ENDIAN
	FFLAGS          = -c -O -DHIDE_SHR_MSG -DLINUX -DNO_SHR_VMATH -DLAHEY -DLITTLE_ENDIAN -DHIDE_MPI -I$(MOD_ESMF)
	FFLAGS77        =
	LDFLAGS         = ../lib/w3lib/libw3.a ../lib/read_grib/readgrib.a ../lib/grib/griblib.a -lesmf -L$(LIB_ESMF)-lnetcdf_stubs

3) After you have checked the LIS architecture linking and compiling settings, return to the make directory.  Before the build can begin, you must link the architecture-based configuration file from the arch directory with the generic configure.lis file in the make directory.  As such:

    ln -s ../arch/configure.lis.linux_lf95  configure.lis

4) Finally, check the other important files in the make directory that are needed for the final compilation step.  These files include:

a)  Filepath -
b)  ftn.h -
c)  ftn_drv.h --

C. Compile Libraries

In this step, you will cd back a directory and into the lib directory.  You will go into each of the following sub-directories and build the respective libraries.  As follows . . .

a)  grib directory:  
	-- gmake;  
b)  read_grib directory:
      -- gmake lf95
c)  w3lib directory:
      -- gmake;


D. Compile Main Code

 The final steps in the main compilation of the LIS 5.0 code involve just the simple gmake command.

1)  To build the dependency files,  cd to ../make/MAKDEP, and then type:  gmake

2) Next and final step, cd back to the make directory and then type:  gmake

After the compilation is initiated, prepare for a little "bug and grind" . . . 

3) Once the compilation step is complete, you may need to run LIS 5.0 with the following Lahey compiler runtime "execution" flags with the LIS executable:

	./LIS  -Wl,-T,-u

Have a b-lis-ful time running LIS 5.0!!

